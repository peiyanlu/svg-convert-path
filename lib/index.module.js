import E from"fs";import{minify as x}from"html-minifier";import C from"juice";import{DOMParser as w,XMLSerializer as k}from"xmldom";import b from"svgpath";const A=new Set([]),N=(t,a)=>{Array.from(t.childNodes).forEach(e=>{const r=e;if(r.nodeName.toUpperCase()==="USE"){const i=r.getAttribute("xlink:href")?.replace("#","");let s=a.getElementById(i);if(A.add(i),s){const n=a.createElement("g");if(Array.from(r.attributes).length>0){let u=Number(r.getAttribute("x"))||0,d=Number(r.getAttribute("y"))||0,o=r.getAttribute("transform");u!==0&&d!==0&&(o+=` translate(${u}, ${d})`),o&&n.setAttribute("transform",o.replace(/(^\s+|\s+$)/g,"")),["x","y","xlink:href","style"].forEach(m=>r.removeAttribute(m)),Array.from(r.attributes).map(({nodeName:m,value:c})=>{n.setAttribute(m,c)})}if(s.nodeName.toUpperCase()==="SYMBOL"){const u=s.cloneNode(!0),d=a.createElement("g");["transform","viewBox"].forEach(o=>r.removeAttribute(o)),Array.from(s.attributes).map(({nodeName:o,value:m})=>{d.setAttribute(o,m)}),Array.from(u.childNodes).map(o=>{d.appendChild(o)}),s=d}n.appendChild(s?.cloneNode(!0)),r?.parentNode?.replaceChild(n,r)}}else r.hasChildNodes()&&N(r,a)})},S=t=>{N(t.documentElement,t),A.forEach(a=>{const e=t.getElementById(a);e.nodeName.toUpperCase()==="SYMBOL"?e.parentNode?.removeChild(e):e.parentNode?.nodeName.toUpperCase()==="DEFS"&&e.parentNode.removeChild(e)})},T=(t,a)=>{const e=a.createElement("path");return Array.from(t.attributes).forEach(r=>{e.setAttribute(r.name,r.value)}),e},U=(t,a)=>{if(!t.nodeName)return;const e=t.nodeName.toLowerCase(),r=u=>parseFloat(t.getAttribute(u)),i=(u,d)=>{const o=T(t,a);o.setAttribute("d",d),u.forEach(m=>m&&o.removeAttribute(m)),t.parentNode?.replaceChild(o,t)};let s=[],n="";switch(e){case"rect":{const u=r("x"),d=r("y"),o=r("width"),m=r("height");let c=r("rx")||r("ry")||0,l=r("ry")||r("rx")||0;if(isNaN(u-d+o-m+c-l))return;c=c>o/2?o/2:c,l=l>m/2?m/2:l;let h;if(c==0||l==0)h=`M${u} ${d}h ${o}v ${m}h ${-o}z`;else{const f=" 0 0 1 ";h=`M${u} ${d+l}a${c} ${l+f+c} ${-l}h${o-c-c}a${c} ${l+f+c} ${l}v${m-l-l}a${c} ${l+f+-c} ${l}h${c+c-o}a${c} ${l+f+-c} ${-l}z`}s=["x","y","width","height","rx","ry"],n=h;break}case"circle":{const u=r("cx"),d=r("cy"),o=r("r");if(isNaN(u-d+o))return;const m=" 0 1 0 ",c=`M${u-o} ${d}a${o} ${o+m+2*o} 0a${o} ${o+m+-2*o} 0z`;s=["cx","cy","r"],n=c;break}case"ellipse":{const u=r("cx"),d=r("cy"),o=r("rx"),m=r("ry");if(isNaN(u-d+o-m))return;const c=" 0 1 0 ",l=`M${u-o} ${d}a${o} ${m+c+2*o} 0a${o} ${m+c+-2*o} 0z`;s=["cx","cy","rx","ry"],n=l;break}case"line":{const u=r("x1"),d=r("y1"),o=r("x2"),m=r("y2");if(isNaN(u-d+(o-m)))return;const c=`M${u} ${d}L${o} ${m}`;s=["x1","y1","x2","y2"],n=c;break}case"polygon":case"polyline":{const u=/[-+]?(?:\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g,d=(t.getAttribute("points")?.match(u)||[]).map(Number);if(d.length<4)return;const o=d.slice(0,2).join(" "),m=d.slice(2).join(" "),c=`M${o}L${m}${e==="polygon"?"z":""}`;s=["points"],n=c;break}default:s=[],n="";break}s.length&&n.length&&i(s,n)},v=(t,a)=>{if(!t.hasChildNodes()&&t.nodeName.toUpperCase()!=="PATH")return U(t,a);t.hasChildNodes()&&Array.from(t.childNodes).forEach(e=>v(e,a))},B=t=>{Array.from(t.documentElement.childNodes).forEach(a=>v(a,t))},F=t=>{Array.from(t.documentElement.childNodes).forEach(a=>{const e=a;if(a.nodeName.toUpperCase()==="PATH"){const r=e.getAttribute("d");if(!r)e.parentNode?.removeChild(a);else if(e.hasAttribute("transform")){const i=b(r).transform(e.getAttribute("transform")).rel().round(2).toString();e.removeAttribute("transform"),e.setAttribute("d",i)}}})},G=/\burl\(((["'])?#(.+?)\1)?\)/,M=t=>{Array.from(t.documentElement.childNodes).forEach(a=>{const e=a;e.nodeName.toUpperCase()==="PATH"&&e.hasAttribute("fill")&&G.test(e.getAttribute("fill"))&&e.removeAttribute("fill")})},P=(t,a,e)=>{if(!e)return;const r=t.hasChildNodes(),i=o=>o.nodeName.toUpperCase(),s=["title","desc"],n=["id","style","stroke","fill"],u=(o,m=!0)=>{i(t).toLowerCase()===o&&m&&t.parentNode?.removeChild(t)},d=(o,m=!0)=>{const c=(l=>l.some(h=>t.hasAttribute(h)))(["stroke","stroke-width"]);if(m)switch(o){case"stroke":t.getAttribute("stroke")==="none"&&["stroke","stroke-width","stroke-linecap","stroke-dasharray"].forEach(h=>t.removeAttribute(h));break;case"fill":const l=t.getAttribute("fill");l!=="none"&&(!c||c&&l!==t.getAttribute("stroke"))&&t.removeAttribute(o);break;default:t?.hasAttribute(o)&&t.removeAttribute(o);break}};r&&s.includes(i(t).toLowerCase())&&s.forEach(o=>u(o,e[o])),n.forEach(o=>d(o,e[o]))},$=t=>{Array.from(t.childNodes).forEach(a=>{const e=a,r=n=>e.hasAttribute(n);Array.from(t.attributes).map(n=>{if(n.nodeName.toLowerCase()==="transform"){let u=n.value;r("transform")&&(u+=` ${e.getAttribute("transform")}`),e.setAttribute(n.nodeName,u)}else r(n.nodeName)||e.setAttribute(n.nodeName,n.value)});const i=e.nodeName.toUpperCase()==="G",s=e.hasChildNodes();i&&!s||e.parentNode?.insertBefore(e,t),i&&s&&$(e)}),t.parentNode?.removeChild(t)},L=(t,a)=>{const e=()=>Array.from(t.documentElement.childNodes);e().forEach(r=>{const i=r;i.nodeName.toUpperCase()==="G"&&(i.hasChildNodes()?$(i):i.parentNode?.removeChild(i))}),e().forEach(r=>{P(r,t,a)})},y=(t,a,e,r)=>{Array.from(t.childNodes).forEach(i=>{const s=i;if(s.nodeName.toUpperCase()==="PATH"){if(s.hasAttribute("d")){const n=s.getAttribute("d");s.setAttribute("d",b(n).translate(a,e).scale(r).rel().round(2).toString())}if(s.hasAttribute("stroke-width")){const n=Number(s.getAttribute("stroke-width"));s.setAttribute("stroke-width",(n*r).toFixed(2))}}else s.hasChildNodes()&&y(s,a,e,r)})},z=(t,a)=>{const{size:e=1024,center:r=!1}=a||{},i=e>0?[0,0,e,e]:[0,0,1024,1024],s=f=>t.documentElement.getAttribute(f),n=(s("viewbox")||s("viewBox")).split(/\s+|,/).filter(f=>f).map(f=>Number(f)),u=e/n[2],d=e/n[3],o=Math.min(u,d),m=u>d,c=Math.abs(n[2]-n[3])/2;let l=m?c:0,h=m?0:c;r||(l=i[0]-n[0],h=i[1]-n[1]),y(t.documentElement,l,h,o),t.documentElement.setAttribute("viewBox",i.join(" "))};var D=(t=>(t.convertUseToGroup="convertUseToGroup",t.viewBoxTransform="viewBoxTransform",t))(D||{});const g={convertUseToGroup:S,convertShapeToPath:B,convertTransformForPath:F,removeGradient:M,removeGroups:L,viewBoxTransform:z},O=t=>{const a=t.documentElement,e=a.getAttribute("viewbox");e&&(a.setAttribute("viewBox",e),a.removeAttribute("viewbox"))},H=(t,a)=>{const{plugins:e,options:r}=a;if(e){const i=e.indexOf("convertUseToGroup");~i&&i!==0&&(e.splice(i,1),e.unshift("convertUseToGroup"));const s=e.indexOf("viewBoxTransform");~s&&s!==e.length-1&&(e.splice(s,1),e.push("viewBoxTransform")),e?.forEach(n=>g[n]&&g[n](t,r))}};class p{constructor(a){this.document=a}static parseStr(a,e){return this.parse(a,e)}static parseFile(a,e){const r=E.readFileSync(a,{encoding:"utf-8"});return this.parse(r,e)}static parse(a,e){try{const r=new w,i=C(x(a,{collapseWhitespace:!0,removeComments:!0})),s=r.parseFromString(i,"application/xml");return this.parseDocument(s,e)}catch(r){return console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A",r)}}static parseDocument(a,e){return a.documentElement.nodeName.toUpperCase()!=="SVG"?console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A\u8BF7\u4F20\u5165 SVG \u6587\u6863\uFF01"):(O(a),H(a,e),new p(a))}toSimpleSvg(){return this.document?new k().serializeToString(this.document):""}getPathAttributes(){const a=[];return this.document&&Array.from(this.document.documentElement.childNodes).forEach((e,r)=>{const i={};i.pid=r,e.nodeName.toUpperCase()==="PATH"&&(Array.from(e.attributes).forEach(s=>{s.value&&(i[s.nodeName.toLowerCase()]=s.value)}),a.push(i))}),a}toBase64(){return`data:image/svg+xml;charset=utf-8,${encodeURIComponent(this.toSimpleSvg())}`}}export{p as default};
