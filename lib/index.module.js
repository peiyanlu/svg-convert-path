import E from"fs";import{minify as x}from"html-minifier";import C from"juice";import{DOMParser as w,XMLSerializer as T}from"xmldom";import b from"svgpath";const A=new Set([]),N=(r,a)=>{Array.from(r.childNodes).forEach(t=>{const e=t;if(e.nodeName.toUpperCase()==="USE"){const u=e.getAttribute("xlink:href")?.replace("#","");let n=a.getElementById(u);if(A.add(u),n){const s=a.createElement("g");if(Array.from(e.attributes).length>0){let i=Number(e.getAttribute("x"))||0,d=Number(e.getAttribute("y"))||0,o=e.getAttribute("transform");i!==0&&d!==0&&(o+=` translate(${i}, ${d})`),o&&s.setAttribute("transform",o.replace(/(^\s+|\s+$)/g,"")),["x","y","xlink:href","style"].forEach(m=>e.removeAttribute(m)),Array.from(e.attributes).map(({nodeName:m,value:c})=>{s.setAttribute(m,c)})}if(n.nodeName.toUpperCase()==="SYMBOL"){const i=n.cloneNode(!0),d=a.createElement("g");["transform","viewBox"].forEach(o=>e.removeAttribute(o)),Array.from(n.attributes).map(({nodeName:o,value:m})=>{d.setAttribute(o,m)}),Array.from(i.childNodes).map(o=>{d.appendChild(o)}),n=d}s.appendChild(n?.cloneNode(!0)),e?.parentNode?.replaceChild(s,e)}}else e.hasChildNodes()&&N(e,a)})},k=r=>{N(r.documentElement,r),A.forEach(a=>{const t=r.getElementById(a);t.nodeName.toUpperCase()==="SYMBOL"?t.parentNode?.removeChild(t):t.parentNode?.nodeName.toUpperCase()==="DEFS"&&t.parentNode.removeChild(t)})},S=(r,a)=>{const t=a.createElement("path");return Array.from(r.attributes).forEach(e=>{t.setAttribute(e.name,e.value)}),t},U=(r,a)=>{if(!r.nodeName)return;const t=r.nodeName.toLowerCase(),e=i=>parseFloat(r.getAttribute(i)),u=(i,d)=>{const o=S(r,a);o.setAttribute("d",d),i.forEach(m=>m&&o.removeAttribute(m)),r.parentNode?.replaceChild(o,r)};let n=[],s="";switch(t){case"rect":{const i=e("x"),d=e("y"),o=e("width"),m=e("height");let c=e("rx")||e("ry")||0,l=e("ry")||e("rx")||0;if(isNaN(i-d+o-m+c-l))return;c=c>o/2?o/2:c,l=l>m/2?m/2:l;let h;if(c==0||l==0)h=`M${i} ${d}h ${o}v ${m}h ${-o}z`;else{const f=" 0 0 1 ";h=`M${i} ${d+l}a${c} ${l+f+c} ${-l}h${o-c-c}a${c} ${l+f+c} ${l}v${m-l-l}a${c} ${l+f+-c} ${l}h${c+c-o}a${c} ${l+f+-c} ${-l}z`}n=["x","y","width","height","rx","ry"],s=h;break}case"circle":{const i=e("cx"),d=e("cy"),o=e("r");if(isNaN(i-d+o))return;const m=" 0 1 0 ",c=`M${i-o} ${d}a${o} ${o+m+2*o} 0a${o} ${o+m+-2*o} 0z`;n=["cx","cy","r"],s=c;break}case"ellipse":{const i=e("cx"),d=e("cy"),o=e("rx"),m=e("ry");if(isNaN(i-d+o-m))return;const c=" 0 1 0 ",l=`M${i-o} ${d}a${o} ${m+c+2*o} 0a${o} ${m+c+-2*o} 0z`;n=["cx","cy","rx","ry"],s=l;break}case"line":{const i=e("x1"),d=e("y1"),o=e("x2"),m=e("y2");if(isNaN(i-d+(o-m)))return;const c=`M${i} ${d}L${o} ${m}`;n=["x1","y1","x2","y2"],s=c;break}case"polygon":case"polyline":{const i=/[-+]?(?:\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g,d=(r.getAttribute("points")?.match(i)||[]).map(Number);if(d.length<4)return;const o=d.slice(0,2).join(" "),m=d.slice(2).join(" "),c=`M${o}L${m}${t==="polygon"?"z":""}`;n=["points"],s=c;break}default:n=[],s="";break}n.length&&s.length&&u(n,s)},v=(r,a)=>{if(!r.hasChildNodes()&&r.nodeName.toUpperCase()!=="PATH")return U(r,a);r.hasChildNodes()&&Array.from(r.childNodes).forEach(t=>v(t,a))},G=r=>{Array.from(r.documentElement.childNodes).forEach(a=>v(a,r))},B=r=>{Array.from(r.documentElement.childNodes).forEach(a=>{const t=a;if(a.nodeName.toUpperCase()==="PATH"){const e=t.getAttribute("d");if(!e)t.parentNode?.removeChild(a);else if(t.hasAttribute("transform")){const u=b(e).transform(t.getAttribute("transform")).rel().round(2).toString();t.removeAttribute("transform"),t.setAttribute("d",u)}}})},F=/\burl\(((["'])?#(.+?)\1)?\)/,P=r=>{Array.from(r.documentElement.childNodes).forEach(a=>{const t=a;t.nodeName.toUpperCase()==="PATH"&&t.hasAttribute("fill")&&F.test(t.getAttribute("fill"))&&t.removeAttribute("fill")})},M=(r,a,t)=>{if(!t)return;const e=r.hasChildNodes(),u=o=>o.nodeName.toUpperCase(),n=["title","desc"],s=["id","style","stroke","fill"],i=(o,m=!0)=>{u(r).toLowerCase()===o&&m&&r.parentNode?.removeChild(r)},d=(o,m=!0)=>{const c=(l=>l.some(h=>r.hasAttribute(h)))(["stroke","stroke-width"]);if(m)switch(o){case"stroke":r.getAttribute("stroke")==="none"&&["stroke","stroke-width","stroke-linecap","stroke-dasharray"].forEach(h=>r.removeAttribute(h));break;case"fill":const l=r.getAttribute("fill");l!=="none"&&(!c||c&&l!==r.getAttribute("stroke"))&&r.removeAttribute(o);break;default:r?.hasAttribute(o)&&r.removeAttribute(o);break}};e&&n.includes(u(r).toLowerCase())&&n.forEach(o=>i(o,t[o])),s.forEach(o=>d(o,t[o]))},$=r=>{Array.from(r.childNodes).forEach(a=>{const t=a,e=s=>t.hasAttribute(s);Array.from(r.attributes).map(s=>{if(s.nodeName.toLowerCase()==="transform"){let i=s.value;e("transform")&&(i+=` ${t.getAttribute("transform")}`),t.setAttribute(s.nodeName,i)}else e(s.nodeName)||t.setAttribute(s.nodeName,s.value)});const u=t.nodeName.toUpperCase()==="G",n=t.hasChildNodes();u&&!n||t.parentNode?.insertBefore(t,r),u&&n&&$(t)}),r.parentNode?.removeChild(r)},L=(r,a)=>{const t=()=>Array.from(r.documentElement.childNodes);t().forEach(e=>{const u=e;u.nodeName.toUpperCase()==="G"&&(u.hasChildNodes()?$(u):u.parentNode?.removeChild(u))}),t().forEach(e=>{M(e,r,a)})},y=(r,a,t,e)=>{Array.from(r.childNodes).forEach(u=>{const n=u;if(n.nodeName.toUpperCase()==="PATH"){if(n.hasAttribute("d")){const s=n.getAttribute("d");n.setAttribute("d",b(s).translate(a,t).scale(e).rel().round(10).toString())}if(n.hasAttribute("stroke-width")){const s=Number(n.getAttribute("stroke-width"));n.setAttribute("stroke-width",(s*e).toFixed(2))}}else n.hasChildNodes()&&y(n,a,t,e)})},z=(r,a)=>{const{size:t=1024,center:e=!0}=a||{},u=t>0?[0,0,t,t]:[0,0,1024,1024],n=f=>r.documentElement.getAttribute(f),s=(n("viewbox")||n("viewBox")).split(/\s+|,/).filter(f=>f).map(f=>Number(f)),i=t/s[2],d=t/s[3],o=Math.min(i,d),m=i>d,c=Math.abs(s[2]-s[3])/2;let l=m?c:0,h=m?0:c;e||(l=u[0]-s[0],h=u[1]-s[1]),y(r.documentElement,l,h,o),r.documentElement.setAttribute("viewBox",u.join(" "))};var D=(r=>(r.convertUseToGroup="convertUseToGroup",r.viewBoxTransform="viewBoxTransform",r))(D||{});const g={convertUseToGroup:k,convertShapeToPath:G,removeGradient:P,removeGroups:L,convertTransformForPath:B,viewBoxTransform:z},O=r=>{const a=r.documentElement,t=a.getAttribute("viewbox");t&&(a.setAttribute("viewBox",t),a.removeAttribute("viewbox"))},H=(r,a)=>{const t=["convertUseToGroup","convertShapeToPath","removeGradient","removeGroups","convertTransformForPath","viewBoxTransform"],{plugins:e=t,options:u}=a;if(e){const n=e.indexOf("convertUseToGroup");~n&&n!==0&&(e.splice(n,1),e.unshift("convertUseToGroup"));const s=e.indexOf("viewBoxTransform");~s&&s!==e.length-1&&(e.splice(s,1),e.push("viewBoxTransform")),e?.forEach(i=>g[i]&&g[i](r,u))}};class p{constructor(a){this.document=a}static parseStr(a,t){return this.parse(a,t)}static parseFile(a,t){const e=E.readFileSync(a,{encoding:"utf-8"});return this.parse(e,t)}static parse(a,t){try{const e=new w,u=C(x(a,{collapseWhitespace:!0,removeComments:!0})),n=e.parseFromString(u,"application/xml");return this.parseDocument(n,t)}catch(e){return console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A",e)}}static parseDocument(a,t){return a.documentElement.nodeName.toUpperCase()!=="SVG"?console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A\u8BF7\u4F20\u5165 SVG \u6587\u6863\uFF01"):(O(a),H(a,t),new p(a))}toSimpleSvg(){return this.document?new T().serializeToString(this.document):""}getPathAttributes(){const a=[];return this.document&&Array.from(this.document.documentElement.childNodes).forEach((t,e)=>{const u={};u.pid=e,t.nodeName.toUpperCase()==="PATH"&&(Array.from(t.attributes).forEach(n=>{n.value&&(u[n.nodeName.toLowerCase()]=n.value)}),a.push(u))}),a}toBase64(){return`data:image/svg+xml;charset=utf-8,${encodeURIComponent(this.toSimpleSvg())}`}}export{p as default};
