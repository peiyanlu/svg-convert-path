import x from"fs";import{minify as w}from"html-minifier";import S from"juice";import{DOMParser as T,XMLSerializer as U}from"xmldom";import A from"svgpath";const b=new Set([]),v=(t,a)=>{Array.from(t.childNodes).forEach(e=>{const r=e;if(r.nodeName.toUpperCase()==="USE"){const c=r.getAttribute("xlink:href")?.replace("#","");let s=a.getElementById(c);if(b.add(c),s){const m=a.createElement("g");if(Array.from(r.attributes).length>0){let l=Number(r.getAttribute("x"))||0,d=Number(r.getAttribute("y"))||0,o=r.getAttribute("transform");l!==0&&d!==0&&(o+=` translate(${l}, ${d})`),o&&m.setAttribute("transform",o.replace(/(^\s+|\s+$)/g,"")),["x","y","xlink:href","style"].forEach(i=>r.removeAttribute(i)),Array.from(r.attributes).map(({nodeName:i,value:n})=>{m.setAttribute(i,n)})}if(s.nodeName.toUpperCase()==="SYMBOL"){const l=s.cloneNode(!0),d=a.createElement("g");["transform","viewBox"].forEach(o=>r.removeAttribute(o)),Array.from(s.attributes).map(({nodeName:o,value:i})=>{d.setAttribute(o,i)}),Array.from(l.childNodes).map(o=>{d.appendChild(o)}),s=d}m.appendChild(s?.cloneNode(!0)),r?.parentNode?.replaceChild(m,r)}}else r.hasChildNodes()&&v(r,a)})},G=t=>{v(t.documentElement,t),b.forEach(a=>{const e=t.getElementById(a);e.nodeName.toUpperCase()==="SYMBOL"?e.parentNode?.removeChild(e):e.parentNode?.nodeName.toUpperCase()==="DEFS"&&e.parentNode.removeChild(e)})},k=(t,a)=>{const e=a.createElement("path");return Array.from(t.attributes).forEach(r=>{e.setAttribute(r.name,r.value)}),e},B=(t,a)=>{if(!t.nodeName)return;const e=t.nodeName.toLowerCase(),r=l=>parseFloat(t.getAttribute(l)),c=(l,d)=>{const o=k(t,a);o.setAttribute("d",d),l.forEach(i=>i&&o.removeAttribute(i)),t.parentNode?.replaceChild(o,t)};let s=[],m="";switch(e){case"rect":{const l=r("x"),d=r("y"),o=r("width"),i=r("height");let n=r("rx")||r("ry")||0,u=r("ry")||r("rx")||0;if(isNaN(l-d+o-i+n-u))return;n=n>o/2?o/2:n,u=u>i/2?i/2:u;let f;if(n==0||u==0)f=`M${l} ${d}h ${o}v ${i}h ${-o}z`;else{const h=" 0 0 1 ";f=`M${l} ${d+u}a${n} ${u+h+n} ${-u}h${o-n-n}a${n} ${u+h+n} ${u}v${i-u-u}a${n} ${u+h+-n} ${u}h${n+n-o}a${n} ${u+h+-n} ${-u}z`}s=["x","y","width","height","rx","ry"],m=f;break}case"circle":{const l=r("cx"),d=r("cy"),o=r("r");if(isNaN(l-d+o))return;const i=" 0 1 0 ",n=`M${l-o} ${d}a${o} ${o+i+2*o} 0a${o} ${o+i+-2*o} 0z`;s=["cx","cy","r"],m=n;break}case"ellipse":{const l=r("cx"),d=r("cy"),o=r("rx"),i=r("ry");if(isNaN(l-d+o-i))return;const n=" 0 1 0 ",u=`M${l-o} ${d}a${o} ${i+n+2*o} 0a${o} ${i+n+-2*o} 0z`;s=["cx","cy","rx","ry"],m=u;break}case"line":{const l=r("x1"),d=r("y1"),o=r("x2"),i=r("y2");if(isNaN(l-d+(o-i)))return;const n=`M${l} ${d}L${o} ${i}`;s=["x1","y1","x2","y2"],m=n;break}case"polygon":case"polyline":{const l=/[-+]?(?:\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g,d=(t.getAttribute("points")?.match(l)||[]).map(Number);if(d.length<4)return;const o=d.slice(0,2).join(" "),i=d.slice(2).join(" "),n=`M${o}L${i}${e==="polygon"?"z":""}`;s=["points"],m=n;break}default:s=[],m="";break}s.length&&m.length&&c(s,m)},$=(t,a)=>{if(!t.hasChildNodes()&&t.nodeName.toUpperCase()!=="PATH")return B(t,a);t.hasChildNodes()&&Array.from(t.childNodes).forEach(e=>$(e,a))},F=t=>{Array.from(t.documentElement.childNodes).forEach(a=>$(a,t))},M=t=>{Array.from(t.documentElement.childNodes).forEach(a=>{const e=a;if(a.nodeName.toUpperCase()==="PATH"){const r=e.getAttribute("d");if(!r)e.parentNode?.removeChild(a);else if(e.hasAttribute("transform")){const c=A(r).transform(e.getAttribute("transform")).rel().round(2).toString();e.removeAttribute("transform"),e.setAttribute("d",c)}}})},P=/\burl\(((["'])?#(.+?)\1)?\)/,L=t=>{Array.from(t.documentElement.childNodes).forEach(a=>{const e=a;e.nodeName.toUpperCase()==="PATH"&&e.hasAttribute("fill")&&P.test(e.getAttribute("fill"))&&e.removeAttribute("fill")})},y=t=>{const a=Array.from(t.attributes);Array.from(t.childNodes).map(e=>{const r=e,c=s=>r.hasAttribute(s);a.length>0&&a.map(s=>{if(s.nodeName.toLowerCase()==="transform"){let m=s.value;c("transform")&&(m+=` ${r.getAttribute("transform")}`),r.setAttribute(s.nodeName,m)}else c(s.nodeName)||r.setAttribute(s.nodeName,s.value)}),r.nodeName.toUpperCase()==="G"&&!r.hasChildNodes()||r.parentNode?.insertBefore(r,t),r.nodeName.toUpperCase()==="G"&&r.hasChildNodes()&&y(r)}),t.parentNode?.removeChild(t)},O=t=>{Array.from(t.documentElement.childNodes).forEach(a=>{const e=a;e.nodeName.toUpperCase()==="G"&&(e.hasChildNodes()?y(e):e.parentNode?.removeChild(e))})},g=(t,a,e)=>{if(!e)return;const r=t.hasChildNodes(),c=o=>o.nodeName.toUpperCase(),s=["title","desc"],m=["id","style","fill"],l=(o,i=!0)=>{c(t).toLowerCase()===o&&i&&t.parentNode?.removeChild(t)},d=(o,i=!0)=>{const n=(f=>f.some(h=>t.hasAttribute(h)))(["stroke","stroke-width"]),u=f=>{let h=!1,p=f.parentNode;for(;!h&&p&&c(p)==="G";)h=p.hasAttribute("fill")&&p.getAttribute("fill")==="none",p=p?.parentNode;return h};if(o==="fill"&&i&&c(t)!=="G"&&n&&u(t)&&!t.hasAttribute("fill"))return t.setAttribute(o,"none");o==="stroke"&&t.getAttribute("stroke")==="none"&&c(t)==="G"&&["stroke","stroke-width","stroke-linecap","stroke-dasharray"].forEach(f=>t.removeAttribute(f)),t?.hasAttribute(o)&&i&&t.removeAttribute(o)};r?s.includes(c(t).toLowerCase())?s.forEach(o=>l(o,e[o])):Array.from(t.childNodes).forEach(o=>g(o,a,e)):(o=>{let i=!1,n=o;for(;!i&&n&&c(o)==="G";)l(n.nodeName),i=n.hasChildNodes(),n=n?.parentNode})(t),m.forEach(o=>d(o,e[o]))},z=(t,a)=>{Array.from(t.documentElement.childNodes).forEach(e=>g(e,t,a))},E=(t,a,e,r)=>{Array.from(t.childNodes).forEach(c=>{const s=c;if(s.nodeName.toUpperCase()==="PATH"){if(s.hasAttribute("d")){const m=s.getAttribute("d");s.setAttribute("d",A(m).translate(a,e).scale(r).rel().round(2).toString())}if(s.hasAttribute("stroke-width")){const m=Number(s.getAttribute("stroke-width"));s.setAttribute("stroke-width",(m*r).toFixed(2))}}else s.hasChildNodes()&&E(s,a,e,r)})},D=(t,a)=>{const{size:e=1024,center:r=!1}=a||{},c=e>0?[0,0,e,e]:[0,0,1024,1024],s=h=>t.documentElement.getAttribute(h),m=(s("viewbox")||s("viewBox")).split(/\s+|,/).filter(h=>h).map(h=>Number(h)),l=e/m[2],d=e/m[3],o=Math.min(l,d),i=l>d,n=Math.abs(m[2]-m[3])/2;let u=i?n:0,f=i?0:n;r||(u=c[0]-m[0],f=c[1]-m[1]),E(t.documentElement,u,f,o),t.documentElement.setAttribute("viewBox",c.join(" "))};var H=(t=>(t.convertUseToGroup="convertUseToGroup",t.viewBoxTransform="viewBoxTransform",t))(H||{});const C={convertUseToGroup:G,convertShapeToPath:F,convertTransformForPath:M,removeGradient:L,removeGroups:O,removeNodesOrAttributes:z,viewBoxTransform:D},V=t=>{const a=t.documentElement,e=a.getAttribute("viewbox");e&&(a.setAttribute("viewBox",e),a.removeAttribute("viewbox"))},j=(t,a)=>{const{plugins:e,options:r}=a;if(e){const c=e.indexOf("convertUseToGroup");!!~c&&c!==0&&(e.splice(c,1),e.unshift("convertUseToGroup"));const s=e.indexOf("viewBoxTransform");!!~s&&s!==e.length-1&&(e.splice(s,1),e.push("viewBoxTransform")),e?.forEach(m=>C[m]&&C[m](t,r))}};class N{constructor(a){this.document=a}static parseStr(a,e){return this.parse(a,e)}static parseFile(a,e){const r=x.readFileSync(a,{encoding:"utf-8"});return this.parse(r,e)}static parse(a,e){try{const r=new T,c=S(w(a,{collapseWhitespace:!0,removeComments:!0})),s=r.parseFromString(c,"application/xml");return this.parseDocument(s,e)}catch(r){return console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A",r)}}static parseDocument(a,e){return a.documentElement.nodeName.toUpperCase()!=="SVG"?console.error("SVG \u89E3\u6790\u5931\u8D25\uFF1A\u8BF7\u4F20\u5165 SVG \u6587\u6863\uFF01"):(V(a),j(a,e),new N(a))}toSimpleSvg(){return this.document?new U().serializeToString(this.document):""}getPathAttributes(){const a=[];return this.document&&Array.from(this.document.documentElement.childNodes).forEach((e,r)=>{const c={};c.pid=r,e.nodeName.toUpperCase()==="PATH"&&(Array.from(e.attributes).forEach(s=>{s.value&&(c[s.nodeName.toLowerCase()]=s.value)}),a.push(c))}),a}toBase64(){return`data:image/svg+xml;charset=utf-8,${encodeURIComponent(this.toSimpleSvg())}`}}export{N as default};
